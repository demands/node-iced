#!/usr/bin/env node

// Generated by CoffeeScript 1.6.3
var aws, config, glacier, knownOpts, nopt, parsedOptions, pkg, rc, shortHands;

exports.command = {
  description: 'Manages the vaults in an Amazon Glacier account.'
};

if (require.main === module) {
  nopt = require('nopt');
  pkg = require('../package.json');
  aws = require('aws-sdk');
  knownOpts = {
    create: String
  };
  shortHands = {
    c: ['--create']
  };
  parsedOptions = nopt(knownOpts, shortHands, process.argv);
  rc = require('rc')(pkg.name, {
    endpoint: null,
    aws_access_key: null,
    aws_access_key_id: null,
    aws_region: null
  });
  aws.config.update({
    accessKeyId: rc.aws_access_key_id,
    secretAccessKey: rc.aws_access_key,
    region: rc.aws_region
  });
  config = {
    apiVersion: '2012-06-01'
  };
  if (rc.endpoint) {
    config.endpoint = rc.endpoint;
  }
  glacier = new aws.Glacier(config);
  if (parsedOptions.create != null) {
    glacier.createVault({
      vaultName: parsedOptions.create
    }, function(err, data) {
      return console.log("Created new vault " + parsedOptions.create);
    });
  } else {
    glacier.listVaults(function(err, data) {
      var vault, _i, _len, _ref;
      _ref = data.VaultList;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        vault = _ref[_i];
        console.log(vault.VaultName);
      }
      return process.exit(0);
    });
  }
}
