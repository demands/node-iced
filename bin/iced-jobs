#!/usr/bin/env node

// Generated by CoffeeScript 1.6.3
var columnify, glacier, humanize, knownOpts, moment, nopt, parsedOptions, shortHands, statuscode, vaultName;

exports.command = {
  description: 'Displays and manages running (and complete) jobs.'
};

if (require.main === module) {
  glacier = require('../lib/glacier');
  columnify = require('columnify');
  moment = require('moment');
  humanize = require('string-humanize');
  nopt = require('nopt');
  knownOpts = {
    completed: Boolean,
    failed: Boolean
  };
  shortHands = {
    complete: ['--completed'],
    c: ['--completed'],
    fail: ['--failed'],
    f: ['--failed']
  };
  parsedOptions = nopt(knownOpts, shortHands, process.argv);
  vaultName = parsedOptions.argv.remain.shift();
  if (vaultName == null) {
    console.error("usage: iced jobs [--completed] <vault>\n\nList the jobs associated with <vault>");
    process.exit(1);
  }
  statuscode = parsedOptions.failed ? 'Failed' : parsedOptions.completed ? 'Succeeded' : 'InProgress';
  glacier.listJobs({
    vaultName: vaultName,
    statuscode: statuscode
  }, function(err, data) {
    var jobs;
    if (err != null) {
      console.error(err.message);
      process.exit(1);
    }
    if (data.JobList.length === 0) {
      console.error("No jobs found");
      process.exit(0);
    }
    jobs = data.JobList.map(function(job) {
      return {
        action: job.Action === 'ArchiveRetrieval' ? 'archive' : 'inventory',
        status: job.StatusMessage != null ? job.StatusMessage : humanize(job.StatusCode).toLowerCase(),
        started: moment(job.CreationDate).format('YYYY MMM D, hh:mma'),
        id: job.JobId,
        desc: job.JobDescription
      };
    });
    console.log(columnify(jobs));
    return process.exit(0);
  });
}
